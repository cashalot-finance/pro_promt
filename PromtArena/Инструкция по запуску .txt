Инструкция по запуску Промт Арены
В данной инструкции я расскажу о двух способах запуска приложения: через Python и через Docker.
Способ 1: Запуск через Python
Предварительные требования
Python 3.7 или выше
Git (для клонирования репозитория, если вы его еще не скачали)
Шаги по установке и запуску
Клонирование репозитория (если у вас его еще нет):
   git clone <URL-репозитория>
   cd PromtArena
Запуск скрипта настройки, который создаст необходимые директории и настроит окружение:
   python setup.py
Этот скрипт:
Проверит версию Python
Создаст необходимые директории
Установит все зависимости из requirements.txt
Создаст файл .env с базовыми настройками
Запуск приложения:
   python run.py
Скрипт запустит веб-сервер на localhost и автоматически откроет приложение в вашем браузере по адресу:
http://127.0.0.1:8000Для остановки сервера нажмите Ctrl+C в терминале.
Способ 2: Запуск через Docker
Предварительные требования
Docker и Docker Compose
Git (для клонирования репозитория, если вы его еще не скачали)
Шаги по установке и запуску
Клонирование репозитория (если у вас его еще нет):
   git clone <URL-репозитория>
   cd PromtArena
Создание файла .env (если его нет):
   # Linux/MacOS
   echo "ENCRYPTION_KEY=xVgbLAr0R7Pbw4IbSgVeUNmvz7T3YZ8sJq2M5oXH6fA=" > .env
   
   # Windows (PowerShell)
   echo "ENCRYPTION_KEY=xVgbLAr0R7Pbw4IbSgVeUNmvz7T3YZ8sJq2M5oXH6fA=" | Out-File -Encoding utf8 .env
Запуск с помощью Docker Compose:
   docker-compose up
Эта команда:
Соберет Docker-образ с приложением
Запустит контейнер
Смонтирует директории для данных
Откройте приложение в браузере по адресу:
http://localhost:8000Для остановки контейнера нажмите Ctrl+C в терминале или выполните:
   docker-compose down
Первоначальная настройка после запуска
После запуска Промт Арены необходимо выполнить следующие шаги для полноценной работы:
1. Настройка API ключей
Для работы с моделями AI вам потребуются API ключи от различных провайдеров:Нажмите кнопку Настроить API-ключи в верхнем правом углу.
В открывшемся окне введите ваши API ключи для нужных провайдеров:
OpenAI: https://platform.openai.com/api-keys
Google (Gemini): https://aistudio.google.com/app/apikey
Anthropic (Claude): https://console.anthropic.com/
Mistral AI: https://console.mistral.ai/
Groq: https://console.groq.com/
Hugging Face Hub: https://huggingface.co/settings/tokens
Нажмите Сохранить.
2. Работа с приложением
После сохранения API ключей, в левой панели выберите категорию (например, "Программирование").
Из списка доступных моделей выберите одну модель (для режима одной модели) или две модели (для режима сравнения).
Введите ваш промт в текстовое поле внизу и нажмите Отправить (или используйте сочетание клавиш Ctrl+Enter).
После получения ответа вы можете:
Оценить модель по шкале от 1 до 10
В режиме сравнения выбрать, какая модель дала лучший ответ
Если ответ содержит код, работать с ним в интегрированном редакторе
Визуализировать HTML код в реальном времени
3. Дополнительные функции
Лидерборд: Нажмите кнопку "Лидерборд" для просмотра рейтинга моделей на основе оценок пользователей.
Визуализатор/Редактор: При получении ответа с кодом, нижняя панель автоматически откроется, позволяя редактировать и запускать код.
Настройки: Нажмите на иконку шестеренки для настройки параметров генерации (температура, максимальное количество токенов).
Устранение неполадок
Проблемы с зависимостями: Убедитесь, что вы используете Python 3.7 или выше, и все зависимости установлены правильно: pip install -r backend/requirements.txt
Ошибка с файлом .env: Если файл не создается автоматически, создайте его вручную с ключом шифрования: ENCRYPTION_KEY=xVgbLAr0R7Pbw4IbSgVeUNmvz7T3YZ8sJq2M5oXH6fA=
Проблемы с доступом к базе данных: Убедитесь, что директория /data создана и у пользователя есть права на запись.
Проблемы с Docker: Убедитесь, что Docker и Docker Compose установлены и работают корректно: docker --version и docker-compose --version